<!DOCTYPE html>
<html lang="zh-CN">
  <head>
    <meta charset="UTF-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"
    />
    <title>家庭网络欢迎页面</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link
      href="https://cdn.jsdelivr.net/npm/font-awesome@4.7.0/css/font-awesome.min.css"
      rel="stylesheet"
    />

    <script>
      tailwind.config = {
        theme: {
          extend: {
            colors: {
              primary: "#3b82f6",
              secondary: "#10b981",
              accent: "#f59e0b",
              purple: "#8b5cf6",
              dark: "#0f172a",
            },
            fontFamily: {
              sans: ["Inter", "system-ui", "sans-serif"],
            },
          },
        },
      };
    </script>

    <style type="text/tailwindcss">
      @layer utilities {
        .content-auto {
          content-visibility: auto;
        }
        .text-gradient {
          background-clip: text;
          -webkit-background-clip: text;
          -webkit-text-fill-color: transparent;
        }
        .backdrop-blur {
          backdrop-filter: blur(8px);
          -webkit-backdrop-filter: blur(8px);
        }
      }
    </style>

    <style>
      body {
        margin: 0;
        padding: 0;
        overflow-x: hidden;
        min-height: 100vh;
      }

      #particle-canvas {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 0;
      }

      .content {
        position: relative;
        z-index: 10;
      }

      .device-icon {
        transition: all 0.3s ease;
      }

      .device-icon:hover {
        transform: translateY(-5px) scale(1.05);
      }

      /* 适配移动端设备图标大小 */
      @media (max-width: 640px) {
        .device-icon img {
          width: 24px !important;
          height: 24px !important;
        }
        .device-icon > div {
          width: 40px !important;
          height: 40px !important;
        }
      }
    </style>
  </head>
  <body
    class="bg-gradient-to-br from-slate-900 via-indigo-900 to-slate-900 text-white"
  >
    <canvas id="particle-canvas"></canvas>

    <div
      id="ww_a9f79633910bb"
      v="1.3"
      loc="id"
      a='{"t":"ticker","lang":"zh","sl_lpl":1,"ids":["wl11476"],"font":"Arial","sl_ics":"one_a","sl_sot":"celsius","cl_bkg":"image","cl_font":"#FFFFFF","cl_cloud":"#FFFFFF","cl_persp":"#81D4FA","cl_sun":"#FFC107","cl_moon":"#FFC107","cl_thund":"#FF5722"}'
    >
      <a
        href="https://weatherwidget.org/"
        id="ww_a9f79633910bb_u"
        target="_blank"
        >Free weather widget</a
      >
    </div>
    <script
      async
      src="https://app3.weatherwidget.org/js/?id=ww_a9f79633910bb"
    ></script>

    <div class="content min-h-screen flex flex-col">
      <!-- 主内容 -->
      <div class="container mx-auto px-2 sm:px-4 py-8 sm:py-12 flex-grow">
        <!-- 欢迎信息 -->
        <div
          class="flex flex-col items-center justify-center min-h-[60vh] text-center"
        >
          <h1
            id="greeting"
            class="text-3xl sm:text-4xl md:text-6xl font-bold mb-4 bg-gradient-to-r from-blue-400 via-cyan-300 to-blue-500 text-gradient"
          >
            欢迎回家
          </h1>

          <p
            class="text-lg sm:text-xl md:text-2xl text-slate-300 mb-6 sm:mb-8 max-w-md"
          >
            您已成功连接到家庭网络
          </p>

          <div
            class="bg-white/10 backdrop-blur rounded-2xl px-4 sm:px-8 py-4 sm:py-6 mb-8 sm:mb-12 border border-white/20 shadow-lg w-full max-w-md"
          >
            <span
              id="countdown"
              class="text-xl sm:text-2xl md:text-3xl font-semibold bg-gradient-to-r from-cyan-300 to-blue-400 text-gradient block"
            >
              自动跳转到Bookweb页面
              <div>剩余 <span id="timer">10</span> 秒...</div>
            </span>
          </div>

          <!-- 网络设备状态 -->
          <div class="grid grid-cols-2 gap-3 sm:gap-4 w-full max-w-md">
            <a
              href="http://192.168.123.254"
              target="_blank"
              class="device-icon flex flex-col items-center p-2 sm:p-3 rounded-xl bg-white/10 backdrop-blur-sm"
            >
              <div
                class="w-10 sm:w-12 h-10 sm:h-12 rounded-full flex items-center justify-center mb-2 bg-primary"
              >
                <img
                  src="src/png/wifi.png"
                  alt="路由器"
                  style="width: 24px; height: 24px"
                  class="sm:w-8 sm:h-8"
                />
              </div>
              <span class="text-white text-xs sm:text-sm font-medium"
                >路由器</span
              >
            </a>

            <a
              href="https://192.168.123.20:1234/jason"
              target="_blank"
              class="device-icon flex flex-col items-center p-2 sm:p-3 rounded-xl bg-white/10 backdrop-blur-sm"
            >
              <div
                class="w-10 sm:w-12 h-10 sm:h-12 rounded-full flex items-center justify-center mb-2 bg-secondary"
              >
                <img
                  src="src/png/home.png"
                  alt="家庭服务器"
                  style="width: 24px; height: 24px"
                  class="sm:w-8 sm:h-8"
                />
              </div>
              <span class="text-white text-xs sm:text-sm font-medium"
                >家庭服务器</span
              >
            </a>

            <a
              href="https://192.168.123.40:5667/"
              target="_blank"
              class="device-icon flex flex-col items-center p-2 sm:p-3 rounded-xl bg-white/10 backdrop-blur-sm"
            >
              <div
                class="w-10 sm:w-12 h-10 sm:h-12 rounded-full flex items-center justify-center mb-2 bg-accent"
              >
                <img
                  src="src/png/nas.png"
                  alt="NAS"
                  style="width: 24px; height: 24px"
                  class="sm:w-8 sm:h-8"
                />
              </div>
              <span class="text-white text-xs sm:text-sm font-medium">NAS</span>
            </a>

            <a
              href="http://192.168.123.20:3020"
              target="_blank"
              class="device-icon flex flex-col items-center p-2 sm:p-3 rounded-xl bg-white/10 backdrop-blur-sm"
            >
              <div
                class="w-10 sm:w-12 h-10 sm:h-12 rounded-full flex items-center justify-center mb-2 bg-purple"
              >
                <img
                  src="src/png/data.png"
                  alt="文件服务器"
                  style="width: 24px; height: 24px"
                  class="sm:w-8 sm:h-8"
                />
              </div>
              <span class="text-white text-xs sm:text-sm font-medium"
                >文件服务器</span
              >
            </a>
          </div>
        </div>
      </div>

      <!-- 页脚信息 -->
      <footer
        class="text-center text-slate-400 text-xs sm:text-sm py-4 sm:py-6"
      >
        <p>家庭网络系统 © <span id="current-year">2023</span></p>
        <p class="mt-1" id="last-update">最后更新: 2023-01-01</p>
      </footer>
    </div>

    <script>
      // 设置当前年份和日期
      document.addEventListener("DOMContentLoaded", function () {
        const now = new Date();
        document.getElementById("current-year").textContent = now.getFullYear();
        document.getElementById(
          "last-update"
        ).textContent = `最后更新: ${now.toLocaleDateString()}`;

        // 设置问候语
        const hour = now.getHours();
        const greetingElement = document.getElementById("greeting");

        if (hour < 12) {
          greetingElement.textContent = "早上好！";
        } else if (hour < 18) {
          greetingElement.textContent = "下午好！";
        } else {
          greetingElement.textContent = "晚上好！";
        }

        // 粒子背景动画
        const canvas = document.getElementById("particle-canvas");
        const ctx = canvas.getContext("2d");

        // 设置canvas尺寸
        function resizeCanvas() {
          canvas.width = window.innerWidth;
          canvas.height = window.innerHeight;
        }

        window.addEventListener("resize", resizeCanvas);
        resizeCanvas();

        // 粒子类
        class Particle {
          constructor() {
            this.x = Math.random() * canvas.width;
            this.y = Math.random() * canvas.height;
            this.size = Math.random() * 3 + 1;
            this.speedX = (Math.random() - 0.5) * 0.5;
            this.speedY = (Math.random() - 0.5) * 0.5;
            this.color = `rgba(100, 200, 255, ${Math.random() * 0.5 + 0.2})`;
          }

          update() {
            this.x += this.speedX;
            this.y += this.speedY;

            // 边界检测
            if (this.x < 0) this.x = canvas.width;
            if (this.x > canvas.width) this.x = 0;
            if (this.y < 0) this.y = canvas.height;
            if (this.y > canvas.height) this.y = 0;
          }

          draw() {
            ctx.beginPath();
            ctx.fillStyle = this.color;
            ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);
            ctx.fill();
          }
        }

        // 创建粒子数组
        const particlesArray = [];
        const particleCount = Math.min(Math.floor(window.innerWidth / 15), 80);

        for (let i = 0; i < particleCount; i++) {
          particlesArray.push(new Particle());
        }

        // 动画循环
        function animateParticles() {
          ctx.clearRect(0, 0, canvas.width, canvas.height);

          // 更新和绘制粒子
          for (let i = 0; i < particlesArray.length; i++) {
            particlesArray[i].update();
            particlesArray[i].draw();
          }

          // 绘制连接线
          for (let a = 0; a < particlesArray.length; a++) {
            for (let b = a; b < particlesArray.length; b++) {
              const dx = particlesArray[a].x - particlesArray[b].x;
              const dy = particlesArray[a].y - particlesArray[b].y;
              const distance = Math.sqrt(dx * dx + dy * dy);

              if (distance < 100) {
                ctx.beginPath();
                ctx.strokeStyle = particlesArray[a].color;
                ctx.lineWidth = 0.2;
                ctx.moveTo(particlesArray[a].x, particlesArray[a].y);
                ctx.lineTo(particlesArray[b].x, particlesArray[b].y);
                ctx.stroke();
              }
            }
          }

          requestAnimationFrame(animateParticles);
        }

        // 开始动画
        animateParticles();
      });

      // 自动跳转倒计时（10秒）
      let timeLeft = 10;
      const timerSpan = document.getElementById("timer");
      const interval = setInterval(() => {
        timeLeft--;
        timerSpan.textContent = timeLeft;
        if (timeLeft <= 0) {
          clearInterval(interval);
          window.location.href = "/BookWEB/index.html";
        }
      }, 1000);
    </script>
  </body>
</html>
